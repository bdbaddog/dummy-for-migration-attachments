--- swig.py.orig	2008-12-17 11:25:19.000000000 -0800
+++ swig.py.patched	2008-12-17 12:00:10.000000000 -0800
@@ -51,7 +51,32 @@
         return '$SWIGCFILESUFFIX'
 
 # Match '%module test', as well as '%module(directors="1") test'
-_reModule = re.compile(r'%module(?:\s*\(.*\))?\s+(.+)')
+# Also allow for test to be quoted (SWIG permits double quotes, but not single)
+_reModule = re.compile(r'%module(\s*\(.*\))?\s+("?)(.+)\2')
+
+def _find_modules(src):
+    """Find all modules referenced by %module lines in `src`, a SWIG .i file.
+       Returns a list of all modules, and a flag set if SWIG directors have
+       been requested (SWIG will generate an additional header file in this
+       case.)"""
+    directors = False
+    mnames = []
+    matches = _reModule.findall(open(src).read())
+    for m in matches:
+        mnames.append(m[2])
+        directors = directors or 'directors' in m[0]
+    return mnames, directors
+
+def _add_director_header_targets(target, env):
+    # Directors only work with C++ code, not C
+    suffix = env.subst(env['SWIGCXXFILESUFFIX'])
+    # For each file ending in SWIGCXXFILESUFFIX, add a new target director
+    # header by replacing the ending with SWIGDIRECTORSUFFIX.
+    for x in target[:]:
+        n = x.name
+        d = x.dir
+        if n.endswith(suffix):
+            target.append(d.File(n[:-len(suffix)] + env['SWIGDIRECTORSUFFIX']))
 
 def _swigEmitter(target, source, env):
     swigflags = env.subst("$SWIGFLAGS", target=target, source=source)
@@ -61,12 +86,16 @@
         mnames = None
         if "-python" in flags and "-noproxy" not in flags:
             if mnames is None:
-                mnames = _reModule.findall(open(src).read())
+                mnames, directors = _find_modules(src)
+            if directors:
+                _add_director_header_targets(target, env)
             target.extend(map(lambda m, d=target[0].dir:
                                      d.File(m + ".py"), mnames))
         if "-java" in flags:
             if mnames is None:
-                mnames = _reModule.findall(open(src).read())
+                mnames, directors = _find_modules(src)
+            if directors:
+                _add_director_header_targets(target, env)
             java_files = map(lambda m: [m + ".java", m + "JNI.java"], mnames)
             java_files = SCons.Util.flatten(java_files)
             outdir = env.subst('$SWIGOUTDIR', target=target, source=source)
@@ -100,6 +129,7 @@
 
     env['SWIG']              = 'swig'
     env['SWIGFLAGS']         = SCons.Util.CLVar('')
+    env['SWIGDIRECTORSUFFIX'] = '_wrap.h'
     env['SWIGCFILESUFFIX']   = '_wrap$CFILESUFFIX'
     env['SWIGCXXFILESUFFIX'] = '_wrap$CXXFILESUFFIX'
     env['_SWIGOUTDIR']       = '${"-outdir " + str(SWIGOUTDIR)}'
