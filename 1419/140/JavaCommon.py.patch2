--- JavaCommon.py.orig	2007-03-07 09:33:18.000000000 +0100
+++ JavaCommon.py.new	2007-03-07 09:32:43.000000000 +0100
@@ -63,8 +63,9 @@
             self.listClasses = []
             self.listOutputs = []
             self.stackBrackets = []
+	    self.stackAnonClassBrackets = []
+	    self.stackStackAnons = [[0]]
             self.brackets = 0
-            self.nextAnon = 1
             self.package = None
 
         def trace(self):
@@ -115,17 +116,21 @@
                    self.brackets == self.stackBrackets[-1]:
                     self.listOutputs.append(string.join(self.listClasses, '$'))
                     self.listClasses.pop()
+	    	    self.stackStackAnons.pop()
                     self.stackBrackets.pop()
+                if len(self.stackAnonClassBrackets) and \
+                   self.brackets == self.stackAnonClassBrackets[-1]:
+                    self.stackStackAnons[-1].pop()
+                    self.stackAnonClassBrackets.pop()
             elif token in [ '"', "'" ]:
                 return IgnoreState(token, self)
             elif token == "new":
                 # anonymous inner class
                 if len(self.listClasses) > 0:
+                    self.stackAnonClassBrackets.append(self.brackets)
                     return self.__getAnonClassState()
                 return self.__getSkipState() # Skip the class name
             elif token in ['class', 'interface', 'enum']:
-                if len(self.listClasses) == 0:
-                    self.nextAnon = 1
                 self.stackBrackets.append(self.brackets)
                 return self.__getClassState()
             elif token == 'package':
@@ -139,10 +144,14 @@
 
         def addAnonClass(self):
             """Add an anonymous inner class"""
-            clazz = self.listClasses[0]
-            self.listOutputs.append('%s$%d' % (clazz, self.nextAnon))
+            className = []
+	    className.extend(self.listClasses)
+            self.stackStackAnons[-1][-1] = self.stackStackAnons[-1][-1] + 1
+	    for anon in self.stackStackAnons[-1]:
+	    	className.append(str(anon))
+            self.listOutputs.append("$".join(className))
             self.brackets = self.brackets + 1
-            self.nextAnon = self.nextAnon + 1
+	    self.stackStackAnons[-1].append(0)
 
         def setPackage(self, package):
             self.package = package
@@ -184,6 +193,7 @@
             if token == '\n':
                 return self
             self.outer_state.listClasses.append(token)
+	    self.outer_state.stackStackAnons.append([0])
             return self.outer_state
 
     class IgnoreState:
