Index: Tool/__init__.py
===================================================================
--- Tool/__init__.py	(revision 3488)
+++ Tool/__init__.py	(working copy)
@@ -656,6 +656,7 @@
                                 'SCCS',
                                 # 'Subversion',
                                 'swig',
+                                'uil',
                                 'tar', 'tex',
                                 'yacc', 'zip', 'rpm', 'wix'],
                                env)
Index: Tool/uil.py
===================================================================
--- Tool/uil.py	(revision 0)
+++ Tool/uil.py	(revision 0)
@@ -0,0 +1,61 @@
+"""SCons.Tool.uil
+
+Tool-specific initialization for Motif Uil files.
+
+There normally shouldn't be any need to import this module directly.
+It will usually be imported through the generic SCons.Tool.Tool()
+selection method.
+
+"""
+
+#
+# Copyright (c) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008 The SCons Foundation
+#
+# Permission is hereby granted, free of charge, to any person obtaining
+# a copy of this software and associated documentation files (the
+# "Software"), to deal in the Software without restriction, including
+# without limitation the rights to use, copy, modify, merge, publish,
+# distribute, sublicense, and/or sell copies of the Software, and to
+# permit persons to whom the Software is furnished to do so, subject to
+# the following conditions:
+#
+# The above copyright notice and this permission notice shall be included
+# in all copies or substantial portions of the Software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
+# KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
+# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+#
+
+__revision__ = ""
+
+import SCons.Action
+import SCons.Builder
+import SCons.Util
+
+def generate(env):
+    """Add Builders and construction variables for uil to an Environment."""
+    UILAction = SCons.Action.Action('$UILCOM', '$UILCOMSTR')
+    bld = SCons.Builder.Builder(action = UILAction, suffix = '.uid', src_suffix = '.uil')
+
+    env['BUILDERS']['Uil'] = bld
+
+    env['UIL']           = 'uil'
+    env['UILFLAGS']      = SCons.Util.CLVar('-w')
+    env['UILPATH']       = []
+    env['UILINCPREFIX']  = '-I'
+    env['UILINCSUFFIX']  = ''
+    env['_UILINCFLAGS']  = '$( ${_concat(UILINCPREFIX, UILPATH, UILINCSUFFIX, __env__, RDirs, TARGET, SOURCE)} $)'
+    env['UILCOM']        = '$UIL ${_UILINCFLAGS} $UILFLAGS -o $TARGET $SOURCES'
+
+    expr = '^[ \t]*include[ \t]file[ \t]*[\'"]([^\'"]+)[\'"]'
+    scanner = SCons.Scanner.Classic("UilScan", ".uil", "UILPATH", expr)
+ 
+    env.Append(SCANNERS = scanner)
+
+def exists(env):
+    return env.Detect('uil')
