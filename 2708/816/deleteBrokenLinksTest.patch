Index: test/Delete.py
===================================================================
--- test/Delete.py	(revision 5177)
+++ test/Delete.py	(working copy)
@@ -37,6 +37,10 @@
 test.write('SConstruct', """
 Execute(Delete('f1'))
 Execute(Delete('d2'))
+Execute(Delete('symlinks/brokenlink'))
+Execute(Delete('symlinks/dirlink'))
+Execute(Delete('symlinks/filelink'))
+
 def cat(env, source, target):
     target = str(target[0])
     f = open(target, "wb")
@@ -72,6 +76,13 @@
 test.write('f1', "f1\n")
 test.subdir('d2')
 test.write(['d2', 'file'], "d2/file\n")
+test.subdir('symlinks')
+test.subdir('symlinks/dirtarget')
+test.write('symlinks/dirtarget/dircontent', 'dircontent content\n')
+test.write('symlinks/filetarget', 'filetarget content\n')
+test.symlink('filetarget', 'symlinks/filelink')
+test.symlink('dirtarget', 'symlinks/dirlink')
+test.symlink('brokentarget', 'symlinks/brokenlink')
 test.write('f3.in', "f3.in\n")
 test.write('f4', "f4\n")
 test.subdir('d5')
@@ -94,6 +105,9 @@
 expect = test.wrap_stdout(read_str = """\
 Delete("f1")
 Delete("d2")
+Delete("symlinks/brokenlink")
+Delete("symlinks/dirlink")
+Delete("symlinks/filelink")
 """,
                           build_str = """\
 Delete("d11-nonexistent.out")
@@ -120,6 +134,13 @@
 
 test.must_exist('f1')
 test.must_exist('d2')
+test.must_exist('symlinks')
+test.must_exist('symlinks/dirtarget')
+test.must_exist('symlinks/dirtarget/dircontent')
+test.must_exist('symlinks/filetarget')
+test.must_exist('symlinks/filelink')
+test.must_exist('symlinks/dirlink')
+test.must_exist('symlinks/brokenlink')
 test.must_exist(os.path.join('d2', 'file'))
 test.must_not_exist('f3.out')
 test.must_exist('f4')
@@ -140,6 +161,13 @@
 
 test.must_not_exist('f1')
 test.must_not_exist('d2')
+test.must_exist('symlinks')
+test.must_exist('symlinks/dirtarget')
+test.must_exist('symlinks/dirtarget/dircontent')
+test.must_exist('symlinks/filetarget')
+test.must_not_exist('symlinks/filelink')
+test.must_not_exist('symlinks/dirlink')
+test.must_not_exist('symlinks/brokenlink')
 test.must_not_exist(os.path.join('d2', 'file'))
 test.must_match('f3.out', "f3.in\n")
 test.must_not_exist('f4')
