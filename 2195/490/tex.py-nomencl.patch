--- tex.py.old	2008-09-04 18:28:36.000000000 +0200
+++ tex.py	2008-09-04 18:27:16.000000000 +0200
@@ -53,6 +53,7 @@
 openout_aux_re = re.compile(r"\\openout.*`(.*\.aux)'")
 openout_re = re.compile(r"\\openout.*`(.*)'")
 
+makencl_re = re.compile(r"^[^%]*\\makenomenclature", re.MULTILINE)
 makeindex_re = re.compile(r"^[^%]*\\makeindex", re.MULTILINE)
 tableofcontents_re = re.compile(r"^[^%]*\\tableofcontents", re.MULTILINE)
 bibliography_re = re.compile(r"^[^%]*\\bibliography", re.MULTILINE)
@@ -70,6 +71,9 @@
 # An action to run MakeIndex on a file.
 MakeIndexAction = None
 
+# An action to run MakeIndex (for nomencl) on a file.
+MakeNclAction = None
+
 def InternalLaTeXAuxAction(XXXLaTeXAction, target = None, source= None, env=None):
     """A builder for LaTeX files that checks the output in the aux file
     and decides how many times to use LaTeXAction, and BibTeXAction."""
@@ -116,6 +120,11 @@
     if os.path.exists(idxfilename):
         idxContents = open(idxfilename, "rb").read()
 
+    nclfilename = os.path.join(targetdir, basefile + '.nlo')
+    nclContents = ""
+    if os.path.exists(nclfilename):
+        nclContents = open(nclfilename, "rb").read()
+
     tocfilename = os.path.join(targetdir, basefile + '.toc')
     tocContents = ""
     if os.path.exists(tocfilename):
@@ -162,6 +171,13 @@
         MakeIndexAction(idxfile, idxfile, env)
         must_rerun_latex = 1
 
+    # Now decide if latex will need to be run again due to nomencl.
+    if os.path.exists(nclfilename) and nclContents != open(nclfilename, "rb").read():
+        # We must run makeindex
+        nclfile = env.fs.File(targetbase)
+        MakeNclAction(nclfile, nclfile, env)
+        must_rerun_latex = 1
+
     if must_rerun_latex == 1:
         XXXLaTeXAction(target, source, env)
 
@@ -227,6 +243,11 @@
             target.append(targetbase + '.ind')
             target.append(targetbase + '.idx')
             env.Precious(targetbase + '.idx')
+	if makencl_re.search(content):
+	    target.append(targetbase + '.nls')
+	    target.append(targetbase + '.nlo')
+	    env.Precious(targetbase + '.nlo')
+	    
         if bibliography_re.search(content):
             target.append(targetbase + '.bbl')
             env.Precious(targetbase + '.bbl')
@@ -272,6 +293,10 @@
     global MakeIndexAction
     if MakeIndexAction is None:
         MakeIndexAction = SCons.Action.Action("$MAKEINDEXCOM", "$MAKEINDEXCOMSTR")
+    
+    global MakeNclAction
+    if MakeNclAction is None:
+        MakeNclAction = SCons.Action.Action("$MAKENCLCOM", "$MAKENCLCOMSTR")
 
     global TeXLaTeXAction
     if TeXLaTeXAction is None:
@@ -302,5 +327,9 @@
     env['MAKEINDEXFLAGS'] = SCons.Util.CLVar('')
     env['MAKEINDEXCOM']   = 'cd ${TARGET.dir} && $MAKEINDEX $MAKEINDEXFLAGS ${SOURCE.file}'
 
+    env['MAKENCL']    = 'makeindex'
+    env['MAKENCLFLAGS'] = '-s nomencl.ist -o'
+    env['MAKENCLCOM']   = 'cd ${TARGET.dir} && $MAKENCL ${SOURCE.file}.nlo $MAKENCLFLAGS ${SOURCE.file}.nls'
+
 def exists(env):
     return env.Detect('tex')
